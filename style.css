/* Fuentes */
/* -------------------------------------------------------------------------------------------------------------- */
@font-face {
    font-family: archivoNarrow;
    src: url(./fonts/woff2/ArchivoNarrow-Medium.woff2) format("woff2"),
        url(./fonts/woff/ArchivoNarrow-Medium.woff) format("woff");
    font-weight: 500;
    font-style: normal;
}

@font-face {
    font-family: archivoNarrow;
    src: url(./fonts/woff2/ArchivoNarrow-Regular.woff2) format("woff2"),
        url(./fonts/woff/ArchivoNarrow-Regular.woff) format("woff");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: archivoNarrow;
    src: url(./fonts/woff2/ArchivoNarrow-Bold.woff2) format("woff2"),
        url(./fonts/woff/ArchivoNarrow-Bold.woff) format("woff");
    font-weight: 700;
    font-style: normal;
}

@font-face {
    font-family: archivoNarrow;
    src: url(./fonts/woff2/ArchivoNarrow-SemiBold.woff2) format("woff2"),
        url(./fonts/woff/ArchivoNarrow-SemiBold.woff) format("woff");
    font-weight: 600;
    font-style: normal;
}
/* -------------------------------------------------------------------------------------------------------------- */

/* Estilos globales */
/* -------------------------------------------------------------------------------------------------------------- */

html {
    /* Colores */
    /* -------------------------------------------------------- */

    --colorBase1RGBDefinition: 193, 144, 120;
    --colorBase4RGBDefinition: 163, 119, 97;
    --colorBase3RGBDefinition: 238, 205, 186;
    --colorOverlay1: rgba(0, 0, 0, 0.616);
    --colorBase1: rgb(var(--colorBase1RGBDefinition));
    --colorBase2: #d6af9c;
    --colorBase3: rgb(var(--colorBase3RGBDefinition));
    --colorBase4: rgb(var(--colorBase4RGBDefinition));
    --colorBase5: #ffedde;
    --colorPrimario1: #28150d;
    --colorPrimario2: #462718;
    --colorPrimario3: #562c1a;
    --colorPrimario4: #753c23;
    --colorAcento1: #96fe69;
    --colorAcento2: #68ffd5;
    --colorAcento3: #f6fe68;
    --colorAcento4: #feb269;
    --colorInvalid1: #9e0000;
    --colorInvalid2: #ffcccc;
    --colorValid1: #029e00;
    --colorValid2: #cdffcc;
    --colorBase4Opacity: rgb(var(--colorBase4RGBDefinition), 0.85);
    --colorBase3Opacity: rgb(var(--colorBase3RGBDefinition), 0.85);

    /* -------------------------------------------------------- */

    /* Size */
    /* -------------------------------------------------------- */
    --homeIconSize: calc(40em / 20);
    --indicatorContainerWidth: calc(255em / 13);
    --indicatorContainerBorderWidth: calc(1em / 13);
    --searchBarWidth: clamp(224px, 49.7143px + 54.46428571428571vw, 468px);
    --menuButtonSize: clamp(1.875rem, 0.9375rem + 4.6875vw, 3.1875rem);
    --searchBarBorderWidth: clamp(1px, 0.4796499999999999px + 0.16260937500000003vw, 1.72849px);
    --bookCardBaseWidth: clamp(17.5rem, 15.089285714285715rem + 12.053571428571427vw, 20.875rem);
    --footerGithubIconSize: calc(1em * (25 / 18));
    --filterContainerWidth: calc(1em * (140 / 14));
    --filterContainerHeight: calc(1em * (19.35 / 14));
    --filterCheckboxSize: calc(1em * (12 / 14));
    --filterCheckboxBorderWidth: calc(1em * (1 / 14));
    --filterCheckboxBGSize: calc(1em * (10 / 14));
    --cancelAcceptButtonWidth: calc(1em * (60 / 14));
    --cancelAcceptButtonHeight: calc(1em * (25 / 14));
    --cancelAcceptButtonBorderWidth: calc(1em * (1 / 14));
    --filterMenuBorderWidth: calc(1em * (1 / 14));
    --menuInputContainerHeight: calc(1em * (66 / 15));
    --menuInputBarWidth: calc(1em * (220 / 14));
    --menuInputBarHeight: calc(1em * (25 / 14));
    --menuInputBarBorderWidth: calc(1em * (1 / 14));
    --menuInputIconSize: calc(1em * (20 / 15));
    --menuIndicationIconSize: 1em;
    --dropdownBaseContainerWidth: calc(1em * (105 / 14));
    --dropdownBaseContainerHeight: calc(1em * (19.35 / 14));
    --dropdownBaseContainerArrowIcon: calc(1em * (16 / 14));
    --stateOptionIconSize: calc(1em * (12 / 14));
    --bookStateDropdownContainerBorderWidth: calc(1em * (1 / 14));
    --bookEntryMenuBorderWidth: calc(1em * (1 / 15));
    --menuDeleteContainerIconSize: calc(1em * (14 / 15));
    --deleteButtonUnderlineWidth: 100%;
    --deleteButtonUnderlineHeight: calc(1em * (1 / 15));
    --deleteMenuBorderWidth: calc(1em * (1 / 15));
    --searchDeleteIconSize: calc(var(--menuButtonSize) * 0.5);
    --filterNotificationIconSize: calc(100% * (12.5 / 30));

    /* -------------------------------------------------------- */

    /* font size */
    /* -------------------------------------------------------- */

    --homeTitleFontSize: clamp(1.25rem, 0.5040178571428572rem + 3.729910714285714vw, 2.294375rem);
    --indicatorStatFontSize: clamp(0.8125rem, 0.3276785714285715rem + 2.4241071428571423vw, 1.49125rem);
    --searchBarFontSize: clamp(0.875rem, 0.4196428571428572rem + 2.276785714285714vw, 1.5125rem);
    --githubTitleFontSize: clamp(1.125rem, 0.4536160714285714rem + 3.356919642857143vw, 2.0649375rem);
    --filterMenuFontSize: clamp(0.875rem, 0.4955357142857143rem + 1.8973214285714284vw, 1.40625rem);
    --bookEntryMenuFontSize: clamp(0.9375rem, 0.5308035714285715rem + 2.033482142857143vw, 1.506875rem);
    --menuTitleFontSize: calc(1em * (16 / 15));
    --menuInputBarFontSize: calc(1em * (14 / 15));
    --menuIndicationFontSize: calc(1em * (12 / 15));
    --stateOptionFontSize: calc(1em * (14 / 15));
    --deleteMenuFontSize: var(--bookEntryMenuFontSize);

    /* -------------------------------------------------------- */

    /* Paddings */
    /* -------------------------------------------------------- */
    --homepaddingTop: clamp(0.4375rem, 0.1473214285714286rem + 1.450892857142857vw, 0.84375rem);
    --fieldContainerInLinePadding: calc(3em / 13);
    --statContainerPaddingBlock: calc(2.5em / 13);
    --searchBarLeftPadding: clamp(0.6875rem, 0.2723214285714286rem + 2.075892857142857vw, 1.26875rem);
    --mainInLinePadding: clamp(20px, 5.714285714285715px + 4.4642857142857135vw, 40px);
    --mainBlockPadding: var(--mainInLinePadding);
    --bookCardInLinePadding: calc(100% * (12 / 280));
    --bookCardBlockPadding: calc(100% * (6 / 280));
    --footerPaddingBlock: calc(1em * (12.5 / 18));
    --filterContainerPaddingLeft: calc(1em * (10 / 14));
    --filterButtonContainerPaddingBlock: calc(1em * (5 / 14));
    --bookEntryMenuPaddingBlock: calc(1em * (10.52 / 15));
    --bookEntryMenuPaddingInLine: calc(1em * (30 / 15));
    --menuTitlePaddingBottom: 1em;
    --menuInputTitlePaddingLeft: calc(1em * (10 / 15));
    --menuInputBarPaddingLeft: calc(1em * (11 / 14));
    --dropdownBaseContainerPaddingInLine: calc(1em * (5 / 14));
    --deleteMenuPaddingBlock: calc(1em * (20 / 15));
    --deleteMenuPaddingInLine: calc(1em * (22.5 / 15));
    --searchBarRightPadding: calc(var(--searchBarLeftPadding) + var(--searchDeleteIconSize));
    --buttonAreaPaddingTop: var(--headerRowGap);
    --buttonAreaPaddingBottom: var(--homepaddingTop);

    /* -------------------------------------------------------- */

    /* gap */
    /* -------------------------------------------------------- */

    --homeColumnGap: calc(10em / 20);
    --headerRowGap: clamp(0.4375rem, 0.1473214285714286rem + 1.450892857142857vw, 0.84375rem);
    --buttonAreaColumnGap: clamp(9px, 3.571428571428571px + 1.6964285714285716vw, 16.6px);
    --mainGap: 20px;
    --bookCardColumnGap: calc(100% * (10 / 280));
    --footerGithubColumnGap: calc(1em * (9 / 18));
    --filterContainerColumnGap: calc(1em * (5 / 14));
    --filterButtonContainerColumnGap: calc(1em * (6.67 / 14));
    --bookEntryMenuRowGap: calc(1em * (10 / 15));
    --bookEntryMenuColumnGap: 0px;
    --menuInputContainerRowGap: calc(1em * (5 / 15));
    --menuIndicationColumnGap: calc(1em * (5 / 15));
    --dropdownBaseContainerColumnGap: calc(1em * (5 / 15));
    --stateOptionColumnGap: calc(1em * (5 / 14));
    --menuButtonContainerColumnGap: calc(1em * (10 / 14));
    --menuDeleteContainerColumnGap: calc(1em * (2 / 15));
    --deleteButtonRowGap: calc(1em * (1.5 / 15));
    --deleteMenuColumnGap: calc(1em * (10 / 15));

    /* -------------------------------------------------------- */

    /* position */
    /* -------------------------------------------------------- */
    --homeIconTop: calc((100% - var(--homeIconSize)) / 2);
    --homeIconHorizontalOffset: calc((var(--homeIconSize) + var(--homeColumnGap)) * -1);
    --indicatorContainerSeparatorHorizontalOffset: calc(var(--indicatorContainerBorderWidth) * -0.5);
    --footerGithubIconTop: calc((100% - var(--footerGithubIconSize)) / 2);
    --footerGithubIconLeft: calc((var(--footerGithubIconSize) + var(--footerGithubColumnGap)) * -1);
    --filterMenuTop: calc(100% + var(--headerRowGap));
    --filterMenuRight: 0px;
    --menuInputIndicatorRight: calc(
        (-1 * var(--menuInputIconSize)) + (var(--bookEntryMenuPaddingInLine) - var(--menuInputIconSize)) / -2
    );
    --menuInputIndicatorTop: calc(((1em * (25 / 15)) - var(--menuInputIconSize)) / 2);
    --menuDeleteContainerTop: var(--bookEntryMenuPaddingBlock);
    --menuDeleteContainerRight: var(--menuDeleteContainerTop);
    --searchDeleteIconTop: 50%;
    --searchDeleteIconLeft: calc(
        var(--searchBarWidth) - var(--searchDeleteIconSize) - (var(--searchBarLeftPadding) / 2)
    );
    --filterNotificationIconRight: 0px;
    --filterNotificationIconTop: 0px;

    /* -------------------------------------------------------- */

    /* radius */
    /* -------------------------------------------------------- */

    --indicatorContainerBorderRadius: calc(3em / 13);
    --searchBarBorderRadius: var(--menuButtonSize);
    --bookCardBorderRadiusHorizontal: calc(100% * (10 / 280));
    --bookCardBorderRadiusVertical: calc(100% * (10 / 140));
    --cancelAcceptButtonBorderRadius: calc(1em * (5 / 14));
    --filterMenuBorderRadius: calc(1em * (10 / 14));
    --menuInputBarBorderRadius: var(--menuInputBarHeight);
    --bookEntryMenuBorderRadius: calc(1em * (10 / 15));
    --deleteMenuBorderRadius: calc(1em * (10 / 15));

    /* -------------------------------------------------------- */

    font-size: 100%;
}
*,
*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-size: 0rem;
    font-family: archivoNarrow, Arial, Verdana, Tahoma, "Trebuchet MS";
    text-decoration: none;
    border-style: none;
}

body {
    min-height: 100vh;
    background-color: var(--colorBase1);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, max-content) 1fr max-content;
    grid-template-areas:
        "header"
        "buttonArea"
        "main"
        "footer";
    position: relative;
    overflow: scroll;
}

button {
    cursor: pointer;
}

/* eliminar "x" de input type "search" en chromium */
input[type="search"]::-webkit-search-decoration,
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-results-button,
input[type="search"]::-webkit-search-results-decoration {
    display: none;
}

aside {
    display: none;
}

/* -------------------------------------------------------------------------------------------------------------- */

/* header */
/* -------------------------------------------------------------------------------------------------------------- */

header {
    font-size: var(--homeTitleFontSize);
    padding-top: var(--homepaddingTop);
    grid-area: header;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: var(--homeIconSize) max-content;
    grid-template-areas:
        "home"
        "indicator";
    justify-items: center;
    align-items: center;
    row-gap: var(--headerRowGap);
    position: relative;
}

#home {
    grid-area: home;
    font-size: inherit;
    display: flex;
    justify-content: center;
    position: relative;
}

#home::before {
    display: block;
    content: "";
    font-size: inherit;
    width: var(--homeIconSize);
    height: var(--homeIconSize);
    background-image: url("./Img/Logo.svg");
    background-size: 100%;
    position: absolute;
    top: var(--homeIconTop);
    left: var(--homeIconHorizontalOffset);
}

#homeTitle {
    font-size: inherit;
    color: var(--colorPrimario1);
    font-weight: 500;
}

.indicatorContainer {
    border: var(--indicatorContainerBorderWidth) solid var(--colorPrimario1);
    border-radius: var(--indicatorContainerBorderRadius);
    min-width: var(--indicatorContainerWidth);
    font-size: var(--indicatorStatFontSize);
    grid-area: indicator;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 1fr;
    grid-template-areas: "read reading wantToRead";
    align-content: center;
    overflow: hidden;
}

.statContainer {
    font-size: inherit;
    display: grid;
    grid-template-columns: max-content 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "field value";
    position: relative;
}

.readContainer {
    grid-area: read;
}

.readContainer::after {
    font-size: inherit;
    content: "";
    position: absolute;
    border: var(--indicatorContainerBorderWidth) solid var(--colorPrimario1);
    height: 100%;
    right: var(--indicatorContainerSeparatorHorizontalOffset);
}

.readingContainer {
    grid-area: reading;
}

.readingContainer::after {
    font-size: inherit;
    content: "";
    position: absolute;
    border: var(--indicatorContainerBorderWidth) solid var(--colorPrimario1);
    height: 100%;
    right: var(--indicatorContainerSeparatorHorizontalOffset);
}

.wantToReadContainer {
    grid-area: wantToRead;
}

.fieldContainer {
    padding-block: var(--statContainerPaddingBlock);
    grid-area: field;
    font-size: inherit;
    padding-inline: var(--fieldContainerInLinePadding);
    background-color: var(--colorBase2);
}

.fieldText {
    line-height: 1;
    font-size: inherit;
    font-weight: 500;
    color: var(--colorPrimario2);
}

.valueContainer {
    padding-block: var(--statContainerPaddingBlock);
    grid-area: value;
    font-size: inherit;
    padding-inline: var(--fieldContainerInLinePadding);
    display: flex;
    justify-content: center;
}

.readContainer .valueContainer {
    background-color: var(--colorAcento1);
}

.readingContainer .valueContainer {
    background-color: var(--colorAcento2);
}

.wantToReadContainer .valueContainer {
    background-color: var(--colorAcento3);
}

.valueText {
    line-height: 1;
    font-size: inherit;
    font-weight: 400;
    color: var(--colorPrimario2);
}

.buttonArea {
    background-color: var(--colorBase1);
    width: 100%;
    padding-block: var(--buttonAreaPaddingTop) var(--buttonAreaPaddingBottom);
    grid-area: buttonArea;
    display: grid;
    grid-template-columns: repeat(3, max-content);
    grid-template-rows: max-content;
    grid-template-areas: "search filter add";
    column-gap: var(--buttonAreaColumnGap);
    position: sticky;
    top: -1px;
    z-index: 101;
    justify-content: center;
}

.buttonArea.pinned {
    background: linear-gradient(var(--colorBase4), var(--colorBase4Opacity));
}

.searchContainer {
    grid-area: search;
    display: flex;
    column-gap: var(--buttonAreaColumnGap);
    position: relative;
}

.searchDeleteIcon {
    display: none;
}

.searchDeleteIcon.activated {
    font-size: var(--searchBarFontSize);
    position: absolute;
    display: block;
    width: var(--searchDeleteIconSize);
    height: var(--searchDeleteIconSize);
    background-image: url("./Img/deleteText.svg");
    background-size: 100%;
    top: var(--searchDeleteIconTop);
    left: var(--searchDeleteIconLeft);
    transform: translateY(-50%);
    cursor: pointer;
}

.searchBar {
    background-color: var(--colorBase5);
    padding-inline: var(--searchBarLeftPadding) var(--searchBarRightPadding);
    display: flex;
    align-items: center;
    font-size: var(--searchBarFontSize);
    font-weight: 400;
    line-height: 1;
    color: var(--colorPrimario3);
    width: var(--searchBarWidth);
    height: var(--menuButtonSize);
    border-radius: var(--searchBarBorderRadius);
    border: var(--searchBarBorderWidth) solid var(--colorPrimario1);
}

.menuButton {
    width: var(--menuButtonSize);
    height: var(--menuButtonSize);
    background-color: transparent;
}

.addButton {
    grid-area: add;
    background-image: url("./Img/add.svg");
    background-size: 100%;
}

.filterButtonWrapper {
    grid-area: filter;
    position: relative;
}

.filterButton {
    background-image: url("./Img/filter.svg");
    background-size: 100%;
    position: relative;
}

.filterNotificationIcon {
    display: none;
}

.on .filterNotificationIcon {
    display: block;
    position: absolute;
    width: var(--filterNotificationIconSize);
    height: var(--filterNotificationIconSize);
    background-image: url("./Img/circleNotification.svg");
    background-size: 100%;
    right: var(--filterNotificationIconRight);
    top: var(--filterNotificationIconTop);
}

/* -------------------------------------------------------------------------------------------------------------- */

/* Main */
/* -------------------------------------------------------------------------------------------------------------- */

main {
    padding-inline: var(--mainInLinePadding);
    padding-block: var(--mainBlockPadding);
    grid-area: main;
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(var(--bookCardBaseWidth), 1fr));
    grid-auto-rows: max-content;
    gap: var(--mainGap);
}

.bookCard {
    background-color: var(--colorBase3);
    border-radius: var(--bookCardBorderRadiusHorizontal) / var(--bookCardBorderRadiusVertical);
    aspect-ratio: 2 / 1;
    padding-block: var(--bookCardBlockPadding);
    padding-inline: var(--bookCardInLinePadding);
    display: grid;
    grid-template-columns: max-content 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "cover info";
    align-items: center;
    column-gap: var(--bookCardColumnGap);
    container-type: inline-size;
    container-name: bookCard;
    position: relative;
}

.editButton {
    position: absolute;
    background-color: transparent;
    color: var(--colorPrimario1);
    font-weight: 500;
    display: flex;
    font-size: var(--editButtonFontSize);
    column-gap: var(--editButtonColumnGap);
    top: var(--editButtonTop);
    right: var(--editButtonRight);
}

.editButton::before {
    content: "";
    background-image: url("/Img/edit.svg");
    background-size: 100%;
    width: var(--editButtonIconSize);
    height: var(--editButtonIconSize);
}

.bookCover {
    grid-area: cover;
    width: var(--bookCoverWidth);
    height: var(--bookCoverHeight);
}

.infoContainer {
    grid-area: info;
    display: flex;
    flex-direction: column;
    row-gap: var(--infoContainerRowGap);
}

.bookTitle {
    color: var(--colorPrimario1);
    font-weight: 600;
    font-size: var(--bookTitleFontSize);
}

.bookAuthor {
    color: var(--colorPrimario3);
    font-weight: 500;
    font-size: var(--bookAuthorFontSize);
}

.bookPages {
    color: var(--colorPrimario4);
    font-weight: 500;
    font-size: var(--bookPagesFontSize);
}

.bookStateDropdownContainer {
    position: absolute;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: 1fr;
    grid-template-areas: "base";
    top: var(--bookStateDropdownContainerTop);
    right: var(--editButtonRight);
}

.dropdownBaseContainer {
    grid-area: base;
    background-color: var(--colorBase2);
    cursor: pointer;
    display: grid;
    grid-template-columns: max-content 1fr max-content;
    grid-template-rows: 1fr;
    align-items: center;
    width: var(--dropdownBaseContainerWidth);
    height: var(--dropdownBaseContainerHeight);
    column-gap: var(--dropdownBaseContainerColumnGap);
    padding-inline: var(--dropdownBaseContainerPaddingInLine);
}

.bookStateDropdownContainer[data-value=""] .dropdownBaseContainer {
    grid-template-columns: 1fr max-content;
    justify-items: end;
}

.bookStateDropdownContainer.show .dropdownBaseContainer {
    background-color: var(--colorBase1);
    cursor: auto;
    display: flex;
    justify-content: center;
    align-items: center;
}

.bookStateDropdownContainer:not(.show) .dropdownBaseContainer::after {
    content: "";
    font-size: inherit;
    background-size: 100%;
    background-image: url("./Img/arrowDown.svg");
    width: var(--dropdownBaseContainerArrowIcon);
    height: var(--dropdownBaseContainerArrowIcon);
}

.optionText {
    font-weight: 500;
    font-size: var(--stateOptionFontSize);
}

.bookStateDropdownContainer[data-value=""] .optionText,
.show .optionText {
    font-weight: 600;
}

.stateOptionContainer {
    display: none;
}

.bookStateDropdownContainer.show .stateOptionContainer {
    grid-area: options;
    display: grid;
    grid-template-columns: max-content;
    grid-template-rows: repeat(3, max-content);
    cursor: pointer;
}

.stateOption {
    background-color: var(--colorBase2);
    font-weight: 500;
    color: var(--colorPrimario1);
    display: flex;
    align-items: center;
    width: var(--dropdownBaseContainerWidth);
    height: var(--dropdownBaseContainerHeight);
    font-size: var(--stateOptionFontSize);
    padding-left: var(--stateOptionColumnGap);
    column-gap: var(--stateOptionColumnGap);
}

.stateOption::before,
.bookStateDropdownContainer:not([data-value=""], .show) .dropdownBaseContainer::before {
    content: "";
    background-size: 100%;
}

.stateOption[data-value="wantToRead"]::before,
.bookStateDropdownContainer[data-value="wantToRead"] .dropdownBaseContainer::before {
    background-image: url("./Img/circleYellow.svg");
}

.stateOption[data-value="read"]::before,
.bookStateDropdownContainer[data-value="read"] .dropdownBaseContainer::before {
    background-image: url("./Img/circleGreen.svg");
}

.stateOption[data-value="reading"]::before,
.bookStateDropdownContainer[data-value="reading"] .dropdownBaseContainer::before {
    background-image: url("./Img/circleCyan.svg");
}

.bookStateDropdownContainer.show {
    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, max-content);
    grid-template-areas:
        "base"
        "options";
    border: var(--bookStateDropdownContainerBorderWidth) solid var(--colorPrimario1);
}

.stateOption::before,
.dropdownBaseContainer::before {
    width: var(--stateOptionIconSize);
    height: var(--stateOptionIconSize);
}

@container bookCard (min-width: 1px) {
    .bookCard * {
        /* font size */
        /* ----------------------------------------------------- */
        --editButtonFontSize: calc(100cqw * (14 / 256));
        --bookTitleFontSize: calc(100cqw * (16 / 256));
        --bookAuthorFontSize: calc(100cqw * (14.5 / 256));
        --bookPagesFontSize: calc(100cqw * (14 / 256));
        --stateOptionFontSize: calc(100cqw * (14 / 256));
        /* ----------------------------------------------------- */

        /* gap */
        /* ----------------------------------------------------- */
        --editButtonColumnGap: calc(100cqw * (5 / 256));
        --infoContainerRowGap: calc(100cqw * (2.5 / 256));
        --dropdownBaseContainerColumnGap: calc(100cqw * (5 / 256));
        --stateOptionColumnGap: calc(100cqw * (6 / 256));
        /* ----------------------------------------------------- */

        /* position */
        /* ----------------------------------------------------- */
        --editButtonTop: calc(100cqw * (6 / 256));
        --editButtonRight: calc(100cqw * (12 / 256));
        --bookStateDropdownContainerTop: calc(100cqw * (114 / 256));
        /* ----------------------------------------------------- */

        /* Size */
        /* ----------------------------------------------------- */
        --editButtonIconSize: calc(100cqw * (16 / 256));
        --bookCoverWidth: calc(100cqw * (70 / 256));
        --bookCoverHeight: calc(100cqw * (90 / 256));
        --bookStateDropdownContainerBorderWidth: calc(100cqw / 256);
        --dropdownBaseContainerWidth: calc(100cqw * (105 / 256));
        --dropdownBaseContainerHeight: calc(100cqw * (20 / 256));
        --dropdownBaseContainerArrowIcon: calc(100cqw * (16 / 256));
        --stateOptionIconSize: calc(100cqw * (12 / 256));
        /* ----------------------------------------------------- */

        /* Padding */
        /* ----------------------------------------------------- */
        --dropdownBaseContainerPaddingInLine: calc(100cqw * (4 / 256));
        /* ----------------------------------------------------- */
    }

    .bookStateDropdownContainer[data-value=""] .dropdownBaseContainer {
        --dropdownBaseContainerPaddingInLine: calc(100cqw * (2.5 / 256));
        --dropdownBaseContainerColumnGap: var(--dropdownBaseContainerPaddingInLine);
    }
}

/* -------------------------------------------------------------------------------------------------------------- */

/* Footer */
/* -------------------------------------------------------------------------------------------------------------- */

footer {
    font-size: var(--githubTitleFontSize);
    padding-block: var(--footerPaddingBlock);
    grid-area: footer;
    display: flex;
    justify-content: center;
    align-items: center;
}

#github {
    position: relative;
    font-size: inherit;
}

#github::before {
    content: "";
    width: var(--footerGithubIconSize);
    height: var(--footerGithubIconSize);
    font-size: inherit;
    background-image: url("./Img/github.svg");
    background-size: 100%;
    position: absolute;
    top: var(--footerGithubIconTop);
    left: var(--footerGithubIconLeft);
}

#githubTitle {
    font-size: inherit;
    font-weight: 700;
    color: var(--colorPrimario1);
}

/* -------------------------------------------------------------------------------------------------------------- */

/* menus */
/* -------------------------------------------------------------------------------------------------------------- */

.filterMenu {
    display: none;
}

.filterMenu.show {
    background-color: var(--colorBase2);
    display: flex;
    flex-direction: column;
    font-size: var(--filterMenuFontSize);
    top: var(--filterMenuTop);
    right: var(--filterMenuRight);
    border-radius: var(--filterMenuBorderRadius);
    overflow: hidden;
    border: var(--filterMenuBorderWidth) solid var(--colorPrimario1);
    position: absolute;
}

.filterContainer {
    display: flex;
    padding-left: var(--filterContainerPaddingLeft);
    align-items: center;
    font-size: inherit;
    width: var(--filterContainerWidth);
    height: var(--filterContainerHeight);
    column-gap: var(--filterContainerColumnGap);
}

.filterText {
    font-size: inherit;
    color: var(--colorPrimario1);
    font-weight: 500;
}

.filterTitleContainer {
    padding-left: 0px;
    justify-content: center;
    background-color: var(--colorBase1);
}

.filterTitleContainer .filterText {
    font-weight: 600;
}

.filterCheckbox {
    background-color: var(--colorBase5);
    appearance: none;
    width: var(--filterCheckboxSize);
    height: var(--filterCheckboxSize);
    border: var(--filterCheckboxBorderWidth) solid var(--colorPrimario1);
    cursor: pointer;
}

.filterCheckbox + .filterText {
    cursor: pointer;
}

.filterCheckbox:checked {
    background-image: url("./Img/check.svg");
    background-size: var(--filterCheckboxBGSize);
    background-position: center;
}

.filterAllContainer .filterCheckbox:checked {
    background-color: var(--colorAcento4);
}

.filterWantToReadContainer .filterCheckbox:checked {
    background-color: var(--colorAcento3);
}

.filterReadContainer .filterCheckbox:checked {
    background-color: var(--colorAcento1);
}

.filterReadingContainer .filterCheckbox:checked {
    background-color: var(--colorAcento2);
}

.filterButtonContainer {
    font-size: inherit;
    display: flex;
    justify-content: center;
    align-items: center;
    column-gap: var(--filterButtonContainerColumnGap);
    padding-block: var(--filterButtonContainerPaddingBlock);
}

.cancelAcceptButton {
    font-size: inherit;
    color: var(--colorPrimario1);
    font-weight: 500;
    width: var(--cancelAcceptButtonWidth);
    height: var(--cancelAcceptButtonHeight);
    border: solid var(--cancelAcceptButtonBorderWidth);
    border-radius: var(--cancelAcceptButtonBorderRadius);
}

.cancelButton {
    background-color: var(--colorInvalid2);
    border-color: var(--colorInvalid1);
}

.acceptButton {
    background-color: var(--colorValid2);
    border-color: var(--colorValid1);
}

.menuWrapper {
    display: none;
}

.menuWrapper.show {
    display: block;
    position: absolute;
    width: 100%;
    height: 100%;
    background-color: var(--colorOverlay1);
    z-index: 102;
}

.bookEntryMenu {
    padding-block: var(--bookEntryMenuPaddingBlock);
    padding-inline: var(--bookEntryMenuPaddingInLine);
    font-size: var(--bookEntryMenuFontSize);
    position: fixed;
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(6, max-content);
    grid-template-areas:
        "menuTitle"
        "bookTitle"
        "bookAuthor"
        "bookPageNumber"
        "bookState"
        "menuButtons";
    background-color: var(--colorBase3);
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    row-gap: var(--bookEntryMenuRowGap);
    column-gap: var(--bookEntryMenuColumnGap);
    border: var(--bookEntryMenuBorderWidth) solid var(--colorPrimario1);
    border-radius: var(--bookEntryMenuBorderRadius);
}

.menuTitle {
    grid-area: menuTitle;
    font-size: var(--menuTitleFontSize);
    font-weight: 700;
    color: var(--colorPrimario1);
    padding-bottom: var(--menuTitlePaddingBottom);
    justify-self: center;
}

.menuInputContainer {
    font-size: inherit;
    height: var(--menuInputContainerHeight);
    row-gap: var(--menuInputContainerRowGap);
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(2, max-content);
}

.menuInputTitle {
    font-size: inherit;
    font-weight: 700;
    line-height: 1;
    color: var(--colorPrimario3);
    padding-left: var(--menuInputTitlePaddingLeft);
}

.menuInputWrapper {
    font-size: inherit;
    position: relative;
    row-gap: var(--menuInputContainerRowGap);
    display: grid;
    grid-template-columns: 11fr;
    grid-auto-rows: max-content;
}

.menuInputBar {
    font-size: var(--menuInputBarFontSize);
    width: var(--menuInputBarWidth);
    height: var(--menuInputBarHeight);
    border-radius: var(--menuInputBarBorderRadius);
    border: var(--menuInputBarBorderWidth) solid var(--colorPrimario1);
    color: var(--colorPrimario3);
    font-weight: 400;
    display: flex;
    align-items: center;
    padding-inline: var(--menuInputBarPaddingLeft);
}

/* desactivar las arrows en input type number para chrome */
.menuInputBar::-webkit-outer-spin-button,
input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
}

/* desactivar las arrows en input type number para firefox */
.menuInputBar[type="number"] {
    -moz-appearance: textfield;
}

.menuInputBar.activatedInput:valid {
    border-color: var(--colorValid1);
}

.menuInputBar.activatedInput:invalid {
    border-color: var(--colorInvalid1);
    background-color: var(--colorInvalid2);
}

.menuInputIndicator {
    width: var(--menuInputIconSize);
    height: var(--menuInputIconSize);
    font-size: inherit;
    position: absolute;
    background-size: 100%;
    top: var(--menuInputIndicatorTop);
    right: var(--menuInputIndicatorRight);
}

.menuInputBar.activatedInput:invalid ~ .menuInputIndicator {
    background-image: url("./Img/invalid.svg");
}

.menuInputBar.activatedInput:valid ~ .menuInputIndicator {
    background-image: url("./Img/valid.svg");
}

.menuIndication {
    display: none;
}

.menuInputBar.activatedInput:invalid ~ .menuIndication {
    padding-left: var(--menuInputTitlePaddingLeft);
    display: flex;
    font-size: var(--menuIndicationFontSize);
    font-style: italic;
    font-weight: 400;
    color: var(--colorPrimario3);
    column-gap: var(--menuIndicationColumnGap);
    align-items: center;
}

.menuIndication::after {
    content: "";
    font-size: inherit;
    width: var(--menuIndicationIconSize);
    height: var(--menuIndicationIconSize);
    background-size: 100%;
    background-image: url("./Img/warning.svg");
}

.menuBookStateContainer {
    --menuInputIndicatorTop: calc(((1em * (19.35 / 15)) - var(--menuInputIconSize)) / 2);
}

.menuBookStateContainer .menuInputBar {
    display: none;
}

.menuBookStateContainer .bookStateDropdownContainer {
    position: static;
    font-size: var(--stateOptionFontSize);
}

.menuBookStateContainer .dropdownBaseContainer {
    font-size: inherit;
}

.menuBookStateContainer .bookStateDropdownContainer[data-value=""] .dropdownBaseContainer {
    --dropdownBaseContainerPaddingInLine: calc(1em * (3.525 / 14));
    --dropdownBaseContainerColumnGap: var(--dropdownBaseContainerPaddingInLine);
}

.menuBookStateContainer .menuInputWrapper {
    justify-self: center;
}

.menuBookStateContainer .menuInputBar.activatedInput:invalid ~ .menuIndication {
    position: absolute;
    white-space: nowrap;
    padding: 0px;
    top: calc((1em * (19.35 / 12)) + (1em * (5 / 12)));
}

.menuBookStateContainer .show .stateOptionContainer {
    font-size: inherit;
}

.menuBookStateContainer .stateOption {
    font-size: inherit;
}

.menuBookStateContainer .stateOption::before,
.menuBookStateContainer .dropdownBaseContainer::before {
    font-size: inherit;
}

.menuButtonContainer {
    grid-area: menuButtons;
    display: flex;
    justify-content: center;
    column-gap: var(--menuButtonContainerColumnGap);
    font-size: var(--stateOptionFontSize);
}

.menuDeleteContainer {
    position: absolute;
    font-size: inherit;
    display: flex;
    column-gap: var(--menuDeleteContainerColumnGap);
    align-items: center;
    cursor: pointer;
    top: var(--menuDeleteContainerTop);
    right: var(--menuDeleteContainerRight);
}

.menuDeleteContainer::after {
    content: "";
    font-size: inherit;
    width: var(--menuDeleteContainerIconSize);
    height: var(--menuDeleteContainerIconSize);
    background-image: url("./Img/delete.svg");
    background-size: 100%;
}

.deleteButton {
    background-color: transparent;
    font-size: inherit;
    font-weight: 500;
    color: var(--colorInvalid1);
    display: flex;
    flex-direction: column;
    row-gap: var(--deleteButtonRowGap);
    line-height: 1;
}

.deleteButton::after {
    content: "";
    font-size: inherit;
    width: var(--deleteButtonUnderlineWidth);
    height: var(--deleteButtonUnderlineHeight);
    background-color: var(--colorInvalid1);
}

.deleteMenu {
    background-color: var(--colorBase3);
    padding-block: var(--deleteMenuPaddingBlock);
    padding-inline: var(--deleteMenuPaddingInLine);
    font-size: var(--deleteMenuFontSize);
    position: fixed;
    grid-template-columns: repeat(2, max-content);
    grid-template-rows: repeat(2, max-content);
    grid-template-areas:
        "warning warning"
        "cancel accept";
    display: grid;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    gap: var(--deleteMenuPaddingBlock) var(--deleteMenuColumnGap);
    border-radius: var(--deleteMenuBorderRadius);
    border: var(--colorInvalid1) solid var(--deleteMenuBorderWidth);
}

.deleteText {
    grid-area: warning;
    font-size: inherit;
    font-weight: 500;
    color: var(--colorPrimario1);
}

.deleteMenu .cancelButton {
    justify-self: end;
}

/* -------------------------------------------------------------------------------------------------------------- */

.hide {
    display: none;
}

/* Breakpoint 768px = 48em */
/* -------------------------------------------------------------------------------------------------------------- */

@media (min-width: 48em) {
    /* Estilos globales */
    /* ---------------------------------------------------- */

    html {
        /* Size */
        /* ------------------------------------------------ */

        --githubHeaderIconSize: clamp(50px, -7.450000000000017px + 7.480468750000002vw, 69.15px);
        --searchBarWidth: clamp(468px, 0rem + 60.9375vw, 624px);
        --menuButtonSize: clamp(3.1875rem, 0rem + 6.640625vw, 4.25rem);
        --searchBarBorderWidth: clamp(1.728px, -0.2574719999999999px + 0.258525vw, 2.389824px);
        --footerMinHeight: calc(var(--menuButtonSize) + (var(--footerPaddingBlock) * 2));

        /* ------------------------------------------------ */

        /* Font Size */
        /* ------------------------------------------------ */

        --homeTitleFontSize: clamp(2.294375rem, -0.3418618750000002rem + 5.492160156250001vw, 3.173120625rem);
        --indicatorStatFontSize: clamp(1.49125rem, -0.22219624999999965rem + 3.569679687499999vw, 2.06239875rem);
        --searchBarFontSize: clamp(1.5125rem, -0.22536250000000058rem + 3.620546875000001vw, 2.0917875rem);
        --bookEntryMenuFontSize: clamp(
            1.506875rem,
            -6.250004958019417e-10rem + 3.1393229179687507vw,
            2.009166666875rem
        );
        --filterMenuFontSize: clamp(1.40625rem, 0rem + 2.9296875vw, 1.875rem);

        /* ------------------------------------------------ */

        /* Position */
        /* ------------------------------------------------ */

        --githubHeaderIconTop: clamp(20px, -2.9800000000000004px + 2.9921875vw, 27.66px);
        --githubHeaderIconRight: clamp(30px, -4.470000000000006px + 4.488281250000001vw, 41.49px);
        --filterMenuTop: initial;
        --filterMenuBottom: calc(100% + var(--headerRowGap) + var(--footerPaddingBlock));
        --filterMenuRight: 50%;
        /* ------------------------------------------------ */

        /* padding */
        /* ------------------------------------------------ */

        --homepaddingTop: clamp(0.84375rem, -0.1257187500000001rem + 2.0197265625000003vw, 1.16690625rem);
        --searchBarLeftPadding: calc(1em * (20.283 / 24.2));
        --footerPaddingBlock: clamp(16.11px, 0rem + 2.0976562500000004vw, 21.48px);
        --buttonAreaPaddingTop: 0px;
        --buttonAreaPaddingBottom: 0px;

        /* ------------------------------------------------ */

        /* gap */
        /* ------------------------------------------------ */

        --headerRowGap: var(--homepaddingTop);
        --buttonAreaColumnGap: clamp(16.6px, -2.473399999999991px + 2.483515624999999vw, 22.9578px);

        /* ------------------------------------------------ */

        /* Radius */
        /* ------------------------------------------------ */

        --searchBarBorderRadius: var(--menuButtonSize);

        /* ------------------------------------------------ */
    }

    body {
        grid-template-rows: repeat(2, max-content) 1fr var(--footerMinHeight);
    }

    /* ---------------------------------------------------- */

    /* Header */
    /* ---------------------------------------------------- */

    header {
        position: relative;
    }

    #githubHeaderIcon {
        display: block;
        position: absolute;
        width: var(--githubHeaderIconSize);
        height: var(--githubHeaderIconSize);
        background-image: url("./Img/github.svg");
        background-size: 100%;
        top: var(--githubHeaderIconTop);
        right: var(--githubHeaderIconRight);
    }

    .buttonArea {
        display: none;
    }
    /* ---------------------------------------------------- */

    /* footer */
    /* ---------------------------------------------------- */
    footer {
        background: linear-gradient(var(--colorBase4Opacity), var(--colorBase4));
        position: fixed;
        bottom: 0px;
        width: 100%;
    }

    #github {
        display: none;
    }

    footer .buttonArea {
        display: grid;
        background-color: inherit;
    }

    /* ---------------------------------------------------- */

    /* menus */
    /* ---------------------------------------------------- */

    .filterMenu.show {
        bottom: var(--filterMenuBottom);
        transform: translateX(50%);
    }

    /* ---------------------------------------------------- */
}

/* -------------------------------------------------------------------------------------------------------------- */

/* Breakpoint 1024px = 64em */
/* -------------------------------------------------------------------------------------------------------------- */

@media (min-width: 64em) {
    /* Estilos globales */
    /* ---------------------------------------------------- */

    html {
        /* Font Size */
        /* ------------------------------------------------ */

        --githubTitleFontSize: 1.6875rem;
        --homeTitleFontSize: 1.88125rem;
        --searchBarFontSize: 1rem;
        --buttonTextFontSize: 1.25rem;
        --indicatorStatFontSize: 1.625rem;
        --valueTextFontSize: calc(1em * (35 / 26));
        --filterMenuFontSize: 1.25rem;
        --bookEntryMenuFontSize: 1.339375rem;

        /* ------------------------------------------------ */

        /* Size */
        /* ------------------------------------------------ */

        --footerMinHeight: 6.25rem;
        --searchBarWidth: 280px;
        --menuButtonSize: 1.875rem;
        --searchBarBorderWidth: 1.041px;
        --menuButtonIconSize: var(--menuButtonSize);
        --bookCardBaseWidth: 19.5rem;
        --asideWidth: calc(var(--searchBarWidth) + var(--buttonAreaPaddingInline) * 2);
        --indicatorContainerWidth: 0px;
        --fieldContainerIconSize: calc(1em * (23 / 26));
        --filterNotificationIconSize: calc(1em * (12.5 / 20));

        /* ------------------------------------------------ */

        /* Padding */
        /* ------------------------------------------------ */

        --footerPaddingBlock: 0px;
        --homepaddingTop: 3.75rem;
        --buttonAreaPaddingInline: 10px;
        --mainInLinePadding: clamp(40px, 17.142857142857146px + 2.2321428571428568vw, 60px);
        --mainBlockPadding: clamp(60px, 37.142857142857146px + 2.2321428571428568vw, 80px);
        --statContainerPaddingBlock: 0px;
        --fieldContainerInLinePadding: 0px;
        --indicatorContainerPaddingInLine: calc(1em * (10 / 26));
        --indicatorContainerPaddingBlock: calc(1em * (15 / 26));
        --bookEntryMenuPaddingInLine: calc(1em * (30 / 21.4333));
        --bookEntryMenuPaddingBlock: var(--bookEntryMenuPaddingInLine);
        --menuInputBarPaddingRight: calc(var(--menuInputBarPaddingLeft) + (1em * (20 / 14)));

        /* ------------------------------------------------ */

        /* Gap */
        /* ------------------------------------------------ */

        --headerRowGap: 0.9375rem;
        --searchContainerColumnGap: 10px;
        --buttonAreaRowGap: 15px;
        --menuButtonColumnGap: calc(1em * (5 / 20));
        --buttonAreaColumnGap: 20px;
        --mainGap: clamp(20px, 8.571428571428573px + 1.1160714285714284vw, 30px);
        --statContainerColumnGap: calc(1em * (15 / 26));
        --fieldContainerColumnGap: calc(1em * (10 / 26));
        --indicatorContainerRowGap: calc(1em * (10 / 26));
        --bookEntryMenuColumnGap: 15px;

        /* ------------------------------------------------ */

        /* Radius */
        /* ------------------------------------------------ */

        --searchBarBorderRadius: var(--menuButtonSize);
        --indicatorContainerBorderRadius: calc(1em * (20 / 26));

        /* ------------------------------------------------ */

        /* position */
        /* ------------------------------------------------ */

        --menuInputIndicatorRight: calc(1em * (15.7167 / 21.433));
        --filterMenuBottom: initial;
        --filterMenuTop: calc(100% + var(--headerRowGap));
        --filterMenuRight: 50%;
        --filterNotificationIconRight: initial;
        --filterNotificationIconLeft: calc(var(--menuButtonIconSize) - var(--filterNotificationIconSize));

        /* ------------------------------------------------ */
    }

    #githubHeaderIcon,
    body > header,
    body > footer,
    body > .buttonArea {
        display: none;
    }

    body {
        grid-template-columns: var(--asideWidth) 1fr;
        grid-template-rows: 1fr;
        grid-template-areas: ". main";
    }
    /* ---------------------------------------------------- */

    /* aside */
    /* ---------------------------------------------------- */

    aside {
        height: 100vh;
        display: grid;
        grid-template-columns: var(--asideWidth);
        grid-template-rows: max-content 1fr max-content;
        grid-template-areas:
            "header"
            "indicator"
            "footer";
        background-color: var(--colorBase2);
        position: fixed;
    }

    /* ---------------------------------------------------- */

    /* header */
    /* ---------------------------------------------------- */

    header {
        grid-area: header;
        padding-block: 0px;
        padding-top: var(--homepaddingTop);
        grid-template-rows: var(--homeIconSize) max-content;
        grid-template-areas:
            "home"
            "button";
        background-color: inherit;
    }

    .buttonArea {
        grid-area: button;
        padding-inline: var(--buttonAreaPaddingInline);
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(2, max-content);
        grid-template-areas:
            "search search"
            "add filter";
        row-gap: var(--buttonAreaRowGap);
        background-color: inherit;
    }

    .searchContainer {
        column-gap: var(--searchContainerColumnGap);
    }

    .buttonArea > .menuButton,
    .filterButtonWrapper .menuButton {
        width: auto;
        height: auto;
        display: flex;
        align-items: center;
        font-size: var(--buttonTextFontSize);
        background-image: none;
        background-size: auto;
        column-gap: var(--menuButtonColumnGap);
    }

    .buttonArea > .menuButton::before,
    .filterButtonWrapper .menuButton::before {
        width: var(--menuButtonIconSize);
        height: var(--menuButtonIconSize);
        content: "";
        font-size: inherit;
        background-size: 100%;
    }

    .filterButtonWrapper {
        justify-self: start;
    }

    .addButton {
        justify-self: end;
    }

    .filterButton::before {
        background-image: url("./Img/filter.svg");
    }

    .on .filterNotificationIcon {
        font-size: inherit;
        left: var(--filterNotificationIconLeft);
    }

    .addButton::before {
        background-image: url("./Img/add.svg");
    }

    .buttonText {
        display: block;
        font-size: inherit;
        font-weight: 400;
        color: var(--colorPrimario1);
    }

    #indicatorContainer {
        grid-area: indicator;
        background-color: var(--colorBase4);
        grid-template-columns: 1fr;
        grid-template-rows: repeat(3, max-content);
        grid-template-areas:
            "wantToRead"
            "reading"
            "read";
        padding-inline: var(--indicatorContainerPaddingInLine);
        padding-block: var(--indicatorContainerPaddingBlock);
        row-gap: var(--indicatorContainerRowGap);
        border: none;
        align-self: center;
        justify-self: center;
    }

    .statContainer {
        grid-template-columns: repeat(2, max-content);
        column-gap: var(--statContainerColumnGap);
    }

    .statContainer::after {
        display: none;
    }
    .fieldContainer {
        background-color: transparent;
        display: flex;
        align-items: center;
        column-gap: var(--fieldContainerColumnGap);
    }

    .fieldContainer::before {
        content: "";
        width: var(--fieldContainerIconSize);
        height: var(--fieldContainerIconSize);
        font-size: inherit;
        background-size: 100%;
    }

    .readContainer .fieldContainer::before {
        background-image: url("./Img/circleGreen.svg");
    }

    .readingContainer .fieldContainer::before {
        background-image: url("./Img/circleCyan.svg");
    }

    .wantToReadContainer .fieldContainer::before {
        background-image: url("./Img/circleYellow.svg");
    }

    .fieldText {
        color: var(--colorBase5);
    }

    #indicatorContainer .valueContainer {
        background-color: transparent;
    }

    .valueText {
        font-weight: 400;
        font-size: var(--valueTextFontSize);
    }

    .readContainer .valueText {
        color: var(--colorAcento1);
    }

    .readingContainer .valueText {
        color: var(--colorAcento2);
    }

    .wantToReadContainer .valueText {
        color: var(--colorAcento3);
    }
    /* ---------------------------------------------------- */

    /* footer */
    /* ---------------------------------------------------- */

    footer {
        background-color: inherit;
        width: 100%;
        min-height: var(--footerMinHeight);
        position: static;
        background: none;
    }

    #github {
        display: block;
    }

    /* ---------------------------------------------------- */

    /* menu */
    /* ---------------------------------------------------- */

    .bookEntryMenu {
        grid-template-columns: repeat(2, 1fr);
        grid-template-rows: repeat(4, max-content);
        grid-template-areas:
            "menuTitle menuTitle"
            "bookTitle bookPageNumber"
            "bookAuthor bookState"
            "menuButtons menuButtons";
    }

    .activatedInput {
        padding-inline: var(--menuInputBarPaddingLeft) var(--menuInputBarPaddingRight);
    }

    .menuBookStateContainer .menuInputIndicator {
        --menuInputIndicatorRight: calc(
            (-1 * var(--menuInputIconSize)) + ((var(--bookEntryMenuPaddingInLine) * 2) - var(--menuInputIconSize)) / -2
        );
    }

    /* ---------------------------------------------------- */
}

/* -------------------------------------------------------------------------------------------------------------- */

/* Breakpoint 1280px = 80em */
/* -------------------------------------------------------------------------------------------------------------- */

@media (min-width: 80em) {
    /* Estilos globales */
    /* ---------------------------------------------------- */

    html {
        /* padding */
        /* ------------------------------------------------ */

        --homepaddingTop: clamp(3.75rem, -1.25rem + 6.25vw, 6.25rem);
        --buttonAreaPaddingInline: clamp(10px, -30px + 3.125vw, 30px);
        --mainInLinePadding: clamp(40px, 0px + 3.125vw, 60px);
        --mainBlockPadding: clamp(60px, 20px + 3.125vw, 80px);

        /* ------------------------------------------------ */

        /* Size */
        /* ------------------------------------------------ */

        --indicatorContainerReferenceHeight: clamp(10.625rem, -1.25rem + 14.84375vw, 16.5625rem);
        --searchBarWidth: clamp(280px, 0rem + 21.875vw, 420px);
        --menuButtonSize: clamp(1.875rem, 0rem + 2.34375vw, 2.8125rem);
        --searchBarBorderWidth: clamp(1.041px, -0.001px + 0.08140625000000003vw, 1.562px);
        --bookCardBaseWidth: clamp(17.916875rem, 1.250625000000003rem + 20.832812499999996vw, 26.25rem);
        --footerMinHeight: clamp(6.25rem, -1.25rem + 9.375vw, 10rem);

        /* ------------------------------------------------ */

        /* Font size */
        /* ------------------------------------------------ */

        --homeTitleFontSize: clamp(1.88125rem, -0.36499999999999977rem + 2.8078125vw, 3.004375rem);
        --indicatorStatFontSize: clamp(1.625rem, -0.3125rem + 2.421875vw, 2.59375rem);
        --searchBarFontSize: clamp(1rem, 0rem + 1.25vw, 1.5rem);
        --buttonTextFontSize: clamp(1.25rem, 0rem + 1.5625vw, 1.875rem);
        --githubTitleFontSize: clamp(1.6875rem, -0.33750000000000036rem + 2.5312500000000004vw, 2.7rem);
        --bookEntryMenuFontSize: clamp(1.339375rem, 0.0006249999999998757rem + 1.6734375000000004vw, 2.00875rem);
        --filterMenuFontSize: clamp(1.25rem, 0.0006249999999998757rem + 1.5617187500000003vw, 1.8746875rem);

        /* ------------------------------------------------ */

        /* Gap */
        /* ------------------------------------------------ */

        --headerRowGap: clamp(0.9375rem, -0.9375rem + 2.34375vw, 1.875rem);
        --buttonAreaRowGap: clamp(15px, -15px + 2.34375vw, 30px);
        --searchContainerColumnGap: clamp(10px, 0px + 0.78125vw, 15px);
        --mainGap: clamp(20px, 0px + 1.5625vw, 30px);

        /* ------------------------------------------------ */

        /* radius */
        /* ------------------------------------------------ */

        --searchBarBorderRadius: var(--menuButtonSize);

        /* ------------------------------------------------ */
    }

    /* ---------------------------------------------------- */
}

/* -------------------------------------------------------------------------------------------------------------- */
